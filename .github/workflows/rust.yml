name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
      contents: "read"

    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        extra-conf: |
          extra-platforms = aarch64-linux
    - run: cat /etc/nix/nix.conf
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: DeterminateSystems/flake-checker-action@main
    # - run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - uses: cachix/cachix-action@v14
      with:
        name: m74
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Run `nix build`
      run: nix build .
    - name: Run `nix build aarch64-linux`
      run: |
        nix build --option system aarch64-linux --extra-platforms aarch64-linux .
